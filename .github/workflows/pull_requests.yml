name: Pull Request

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  does-kotlin-work:
    name: DoesKotlinWork
    runs-on: ubuntu-latest
    steps:
      - name: run some kotlin
        shell: kotlin -howtorun .main.kts {0}
        run: |
          @file:DependsOn("com.lordcodes.turtle:turtle:0.6.0")
          import com.lordcodes.turtle.shellRun

          val pattern = "^.*-- verify (.*?) --.*$".toRegex()
          val allModulesValue = "all"

          val gitLogOutput = shellRun(
              "git",
              listOf("log", "--pretty=fuller", "${{ github.event.pull_request.base.sha }}", "..", "${{ github.event.pull_request.head.sha }}")
          )

          val modules = gitLogOutput
              .lineSequence()
              .mapNotNull { line -> pattern.matchEntire(line)?.groupValues }
              .map { (_, modules) -> modules.trim().split("\\s+".toRegex()) }
              .flatten()
              .toSet()
              .sorted()
              .toList()
              .takeUnless { it.contains(allModulesValue) }
              ?: listOf(allModulesValue)

          for (moduleName in modules) {
              println(moduleName)
          }

  event-stuff:
    name: EventStuff
    runs-on: ubuntu-latest
    steps:
      - name: look at the event
        run: |
          echo "this is a thing: ${{ toJSON(github.event.pull_request) }}"

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35

        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true 

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Get at some git stuff
        run: |
          git log --oneline ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

      - name: Get short sha
        id: get_short_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: look at the event
        run: |
          echo "${{ github.event.commits[0].message }}"

      - name: Check the things
        run: true
